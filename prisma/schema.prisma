generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model caisse {
  id                        Int                   @id @default(autoincrement())
  amount                    Int?                  @default(0)
  created_at                DateTime?             @default(now()) @db.DateTime(0)
  user_id                   Int?                  @unique(map: "user_id")
  user_caisse_user_idTouser user?                 @relation("caisse_user_idTouser", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "caisse_ibfk_1")
  transaction_history       transaction_history[]
  user                      user?
}

model user {
  id                                             Int            @id @default(autoincrement())
  name                                           String         @db.VarChar(255)
  username                                       String         @unique(map: "username") @db.VarChar(255)
  password                                       String         @db.VarChar(255)
  role                                           String         @default("[\"USER\"]") @db.VarChar(200)
  created_at                                     DateTime       @default(now()) @db.DateTime(0)
  caisse_id                                      Int            @unique(map: "caisse_id")
  slug                                           String         @unique(map: "slug") @db.VarChar(255)
  caisse_caisse_user_idTouser                    caisse?        @relation("caisse_user_idTouser")
  other_rano_nalaiko                             rano_nalaiko[] @relation("rano_nalaikoTorano_nalaiko")
  rano_nalaiko_rano_nalaiko_responsable_idTouser rano_nalaiko[] @relation("rano_nalaiko_responsable_idTouser")
  caisse                                         caisse         @relation(fields: [caisse_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "caisse")
}

model transaction_history {
  id             Int      @id @default(autoincrement())
  caisse_id      Int
  responsable_id Int?
  debit          Int
  credit         Int
  last_amout     Int
  created_at     DateTime @default(now()) @db.DateTime(0)
  caisse         caisse   @relation(fields: [caisse_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "transaction_history_ibfk_1")

  @@index([caisse_id], map: "caisse_id")
}

model rano_nalaiko {
  id                                     Int      @id @default(autoincrement())
  created_at                             DateTime @default(now()) @db.DateTime(0)
  number                                 Int      @default(1)
  user_id                                Int
  responsable_id                         Int?
  rano_nalaiko                           user     @relation("rano_nalaikoTorano_nalaiko", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "rano_nalaiko_ibfk_1")
  user_rano_nalaiko_responsable_idTouser user?    @relation("rano_nalaiko_responsable_idTouser", fields: [responsable_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "rano_nalaiko_ibfk_2")

  @@index([user_id], map: "rano_nalaiko_ibfk_1")
  @@index([responsable_id], map: "responsable_id")
}

model last_updated {
  table_name  String   @id @db.VarChar(255)
  last_update DateTime @db.Timestamp(0)
}

model boit_ndrakitra {
  id         Int    @id
  amount_total 	       Int
  updated_at    DateTime @default(now()) @db.DateTime(0)
}

