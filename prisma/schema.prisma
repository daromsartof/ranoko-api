generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model bar {
  id          Int      @id @default(autoincrement())
  is_accepted Boolean
  created_at  DateTime @db.DateTime(0)
  rano_id     Int
  rano        rano     @relation(fields: [rano_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "rano_id")

  @@index([rano_id], map: "rano_id")
}

model caisse {
  id           Int       @id @default(autoincrement())
  amount_total Int?
  created_at   DateTime? @db.DateTime(0)
  money        money[]
  user         user[]
}

model money {
  id         Int      @id @default(autoincrement())
  caisse_id  Int?
  amount     String?  @db.VarChar(50)
  created_at DateTime @db.DateTime(0)
  caisse     caisse?  @relation(fields: [caisse_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "money_ibfk_1")

  @@index([caisse_id], map: "caisse_id")
}

model rano {
  id         Int      @id @default(autoincrement())
  quantity   Int
  created_at DateTime @db.Date
  user_id    Int
  bar        bar[]
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "rano_ibfk_1")

  @@index([user_id], map: "user_id")
}

model user {
  id        Int    @id @default(autoincrement())
  name      String @db.VarChar(200)
  user_name String @unique(map: "user_name") @db.VarChar(255)
  password  String @db.VarChar(255)
  role      String @db.VarChar(50)
  caisse_id Int
  slug      String @unique(map: "slug") @db.VarChar(255)
  rano      rano[]
  caisse    caisse @relation(fields: [caisse_id], references: [id], onUpdate: NoAction, map: "caisse")

  @@index([caisse_id], map: "caisse_id")
}
